{"version":3,"sources":["webpack:///js/drivers/tinymce.js","webpack:///webpack/bootstrap 07589190a9a0c7638448","webpack:///./src/js/drivers/base.ts","webpack:///./src/js/utils/editor.ts","webpack:///./src/js/drivers/tinymce.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","368","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","writable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","length","descriptor","key","protoProps","staticProps","editor_1","EditorDriver","_editor_1$default","this","getPrototypeOf","apply","arguments","message","window","alert","_loading","default","390","_toConsumableArray","arr","Array","isArray","arr2","from","_slicedToArray","sliceIterator","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","__rest","e","t","indexOf","getOwnPropertySymbols","EditorEvents","Editor","_ref","items","_bib$classList","_ref$heading","heading","_ref$headingLevel","headingLevel","_ref$style","style","classNames","bib","document","createElement","id","bibliographyId","setAttribute","JSON","stringify","map","_ref2","classList","add","concat","contains","staticBibClass","remove","removeAttribute","warnings","top","ABT","i18n","errors","innerHTML","warning","noBib","headingElement","textContent","appendChild","container","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","itemMeta","item","html","return","footnotes","_note$classList","note","footnoteId","misc","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","entries","_ref3","_ref4","index","footnote","itemNumber","itemContent","_a","_element$classList","_a$classNames","options","reflist","element","citationClass","kind","events","400","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","result","then","base_1","TinyMCEDriver","_base_1$default","_this","editorCitationObserver","MutationObserver","mutations","mutation","removedNodes","removedNode","nodeName","attributes","getNamedItem","split","includes","dispatchEvent","CustomEvent","CITATION_DELETED","selectionCache","fresh","selection","bookmark","rng","createRange","editor","windowManager","clusters","citationByIndex","focus","doc","getDoc","oldElements","querySelectorAll","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","old","parentElement","removeChild","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","content","citation","getElementById","citationItems","dataset","insertContent","createInlineElement","outerHTML","composeFootnotes","regeneratorRuntime","mark","_callee","_this2","wrap","_context","prev","abrupt","attempts","interval","setInterval","tinyMCE","clearInterval","Error","editors","initialized","bindEvents","stop","itemIds","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","elements","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","bibliography","setStaticBibliography","setStandardBibliography","loading","setProgressState","_this3","on","assign","getBookmark","UNAVAILABLE","AVAILABLE","UNDO","addShortcut","ADD_REFERENCE","TOGGLE_PINNED","observe","getBody","childList","subtree","orderedFootnotes","reduce","idx","getAttribute","createFootnoteSection","body","setCursorLocation","childNodes","moveToBookmark","createBibliographyElement","staticBib","nodes","isFootnoteType","querySelector","refs","parse","citationID","ref","properties","noteIndex","_this4","bm","startContainer","parentNode","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","itemsPreceding","DOCUMENT_POSITION_FOLLOWING","itemsFollowing","getContent","format","648"],"mappings":"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","file":"js/drivers/tinymce.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 648);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 368:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar editor_1 = __webpack_require__(390);\n/**\r\n * Base class from which all editor drivers must be derived\r\n */\n\nvar EditorDriver = function (_editor_1$default) {\n  _inherits(EditorDriver, _editor_1$default);\n\n  function EditorDriver() {\n    _classCallCheck(this, EditorDriver);\n\n    return _possibleConstructorReturn(this, (EditorDriver.__proto__ || Object.getPrototypeOf(EditorDriver)).apply(this, arguments));\n  }\n\n  _createClass(EditorDriver, [{\n    key: \"alert\",\n\n    /**\r\n     * If the editor has some form of alert or notifications system, override\r\n     * this so the native notifications are used.\r\n     * @param message Message to be alerted to the user.\r\n     */\n    value: function alert(message) {\n      window.alert(message);\n    }\n    /**\r\n     * If the editor supports a 'loading' state which shows a spinner or some\r\n     * progress indicator, this should be implemented.\r\n     *   - If `true` is passed as an arg, the editor's state should be loading.\r\n     *   - If `false` is passed as an arg, the editor's state should be not loading.\r\n     *   - If no args are passed, the editor's loading state should be toggled to\r\n     *   the opposite of what it currently is.\r\n     * @param _loading Optional argument to explicitly set the loading state\r\n     */\n\n  }, {\n    key: \"setLoadingState\",\n    value: function setLoadingState(_loading) {\n      return;\n    }\n  }]);\n\n  return EditorDriver;\n}(editor_1.default);\n\nexports.default = EditorDriver;\n\n/***/ }),\n\n/***/ 390:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// tslint:disable no-stateless-class\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EditorEvents;\n(function (EditorEvents) {\n    /**\r\n     * Bind and emit this if the editor supports keyboard shortcuts. Keyboard\r\n     * shortcut for this should be cmd/ctrl+alt+r\r\n     */\n    EditorEvents[\"ADD_REFERENCE\"] = \"ADD_REFERENCE\";\n    /**\r\n     * Emit this any time the editor becomes available again after being\r\n     * unavailable (excluding the initial initialization).\r\n     */\n    EditorEvents[\"AVAILABLE\"] = \"EDITOR_AVAILABLE\";\n    /**\r\n     * Emit this when user manually deletes one or more inline citations using\r\n     * the keyboard.\r\n     */\n    EditorEvents[\"CITATION_DELETED\"] = \"CITATION_DELETED\";\n    /**\r\n     * Bind and emit to this if the editor supports keyboard shortcuts.\r\n     * Keyboard shortcut for this should be cmd/ctrl+alt+p\r\n     */\n    EditorEvents[\"TOGGLE_PINNED\"] = \"TOGGLE_PINNED\";\n    /**\r\n     * Emit this any time the editor goes unavailable or becomes hidden.\r\n     */\n    EditorEvents[\"UNAVAILABLE\"] = \"EDITOR_UNAVAILABLE\";\n    /**\r\n     * Emit this any time the user performs an \"undo\" in the editor.\r\n     */\n    EditorEvents[\"UNDO\"] = \"UNDO\";\n})(EditorEvents || (EditorEvents = {}));\n\nvar Editor = function () {\n    function Editor() {\n        _classCallCheck(this, Editor);\n    }\n\n    _createClass(Editor, null, [{\n        key: \"createBibliographyElement\",\n        value: function createBibliographyElement(_ref, items) {\n            var _ref$heading = _ref.heading,\n                heading = _ref$heading === undefined ? '' : _ref$heading,\n                _ref$headingLevel = _ref.headingLevel,\n                headingLevel = _ref$headingLevel === undefined ? 'h3' : _ref$headingLevel,\n                _ref$style = _ref.style,\n                style = _ref$style === undefined ? 'fixed' : _ref$style;\n\n            var _bib$classList;\n\n            var classNames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n            var bib = document.createElement('div');\n            bib.id = Editor.bibliographyId;\n            bib.setAttribute('data-reflist', JSON.stringify(items.map(function (_ref2) {\n                var id = _ref2.id;\n                return id;\n            })));\n            (_bib$classList = bib.classList).add.apply(_bib$classList, [Editor.bibliographyId].concat(_toConsumableArray(classNames)));\n            if (bib.classList.contains(Editor.staticBibClass)) {\n                bib.classList.remove(Editor.bibliographyId);\n                bib.removeAttribute('id');\n                // Occurs only when attempting to insert a static list when the\n                // user's selected citation type doesn't define a bibliography.\n                if (items.length === 0) {\n                    var warnings = top.ABT.i18n.errors.warnings;\n\n                    bib.innerHTML = \"<strong>\" + warnings.warning + \":</strong> \" + warnings.noBib + \".\";\n                    return bib;\n                }\n            }\n            if (heading) {\n                var headingElement = void 0;\n                if (style === 'toggle') {\n                    headingElement = document.createElement('button');\n                    headingElement.classList.add(Editor.bibliographyId + \"__heading\", Editor.bibliographyId + \"__heading_toggle\");\n                    headingElement.setAttribute('aria-expanded', 'false');\n                    headingElement.setAttribute('aria-controls', this.bibliographyId + \"__container\");\n                    headingElement.setAttribute('data-heading-level', headingLevel);\n                } else {\n                    headingElement = document.createElement(headingLevel);\n                    headingElement.classList.add(Editor.bibliographyId + \"__heading\");\n                }\n                headingElement.textContent = heading;\n                bib.appendChild(headingElement);\n            }\n            var container = document.createElement('div');\n            container.id = this.bibliographyId + \"__container\";\n            container.classList.add(this.bibliographyId + \"__container\");\n            bib.appendChild(container);\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var itemMeta = _step.value;\n\n                    var item = document.createElement('div');\n                    item.id = itemMeta.id;\n                    item.innerHTML = itemMeta.html;\n                    container.appendChild(item);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return bib;\n        }\n    }, {\n        key: \"createFootnoteSection\",\n        value: function createFootnoteSection(footnotes) {\n            var _note$classList;\n\n            var classNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            var note = document.createElement('div');\n            note.id = Editor.footnoteId;\n            (_note$classList = note.classList).add.apply(_note$classList, [Editor.footnoteId].concat(_toConsumableArray(classNames)));\n            var heading = document.createElement('div');\n            heading.classList.add(Editor.footnoteId + \"__heading\");\n            heading.textContent = top.ABT.i18n.misc.footnotes;\n            note.appendChild(heading);\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = Array.from(footnotes.entries())[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _ref3 = _step2.value;\n\n                    var _ref4 = _slicedToArray(_ref3, 2);\n\n                    var index = _ref4[0];\n                    var footnote = _ref4[1];\n\n                    var item = document.createElement('div');\n                    item.classList.add(Editor.footnoteId + \"__item\");\n                    var itemNumber = document.createElement('span');\n                    itemNumber.classList.add(Editor.footnoteId + \"__number\");\n                    itemNumber.textContent = \"[\" + (index + 1) + \"]\";\n                    var itemContent = document.createElement('span');\n                    itemContent.classList.add(Editor.footnoteId + \"__content\");\n                    itemContent.innerHTML = footnote;\n                    item.appendChild(itemNumber);\n                    item.appendChild(itemContent);\n                    note.appendChild(item);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            return note;\n        }\n    }, {\n        key: \"createInlineElement\",\n        value: function createInlineElement(_a) {\n            var _element$classList;\n\n            var _a$classNames = _a.classNames,\n                classNames = _a$classNames === undefined ? [] : _a$classNames,\n                options = __rest(_a, [\"classNames\"]);\n\n            var id = options.id,\n                innerHTML = options.innerHTML,\n                reflist = options.reflist;\n\n            var element = document.createElement('span');\n            element.id = id;\n            (_element$classList = element.classList).add.apply(_element$classList, [Editor.citationClass].concat(_toConsumableArray(classNames)));\n            element.innerHTML = innerHTML;\n            element.setAttribute('data-reflist', reflist);\n            if (options.kind === 'note') {\n                element.setAttribute('data-footnote', options.footnote);\n            }\n            return element;\n        }\n    }]);\n\n    return Editor;\n}();\n\nEditor.events = EditorEvents;\nEditor.bibliographyId = 'abt-bibliography';\nEditor.citationClass = 'abt-citation';\nEditor.footnoteId = 'abt-footnote';\nEditor.staticBibClass = 'abt-static-bib';\nexports.default = Editor;\n\n/***/ }),\n\n/***/ 400:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : new P(function (resolve) {\n                resolve(result.value);\n            }).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_1 = __webpack_require__(368);\n\nvar TinyMCEDriver = function (_base_1$default) {\n    _inherits(TinyMCEDriver, _base_1$default);\n\n    function TinyMCEDriver() {\n        _classCallCheck(this, TinyMCEDriver);\n\n        /**\r\n         * `MutationObserver` which watches and reacts to removals of individual\r\n         * citation nodes.\r\n         */\n        var _this = _possibleConstructorReturn(this, (TinyMCEDriver.__proto__ || Object.getPrototypeOf(TinyMCEDriver)).apply(this, arguments));\n\n        _this.editorCitationObserver = new MutationObserver(function (mutations) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = mutations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var mutation = _step.value;\n                    var _iteratorNormalCompletion2 = true;\n                    var _didIteratorError2 = false;\n                    var _iteratorError2 = undefined;\n\n                    try {\n                        for (var _iterator2 = Array.from(mutation.removedNodes)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                            var removedNode = _step2.value;\n\n                            if (removedNode.nodeName !== 'SPAN') {\n                                continue;\n                            }\n                            var classList = removedNode.attributes.getNamedItem('class');\n                            if (!classList) {\n                                continue;\n                            }\n                            if (classList.value.split(' ').includes(base_1.default.citationClass)) {\n                                dispatchEvent(new CustomEvent(base_1.default.events.CITATION_DELETED));\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError2 = true;\n                        _iteratorError2 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                _iterator2.return();\n                            }\n                        } finally {\n                            if (_didIteratorError2) {\n                                throw _iteratorError2;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        });\n        /**\r\n         * Small helper that caches the most previous selection content and\r\n         * bookmark when the editor loses focus.\r\n         */\n        _this.selectionCache = {\n            /**\r\n             * True if focus is currently outside of the editor. Otherwise a\r\n             * non-cached selection should be used\r\n             */\n            fresh: false,\n            /** Content currently selected (HTML) */\n            selection: '',\n            bookmark: { rng: document.createRange() }\n        };\n        return _this;\n    }\n\n    _createClass(TinyMCEDriver, [{\n        key: \"alert\",\n        value: function alert(message) {\n            this.editor.windowManager.alert(message);\n        }\n    }, {\n        key: \"composeCitations\",\n        value: function composeCitations(clusters, citationByIndex, kind) {\n            this.editor.focus();\n            var doc = this.editor.getDoc();\n            var oldElements = doc.querySelectorAll(\"\\n            #\" + base_1.default.footnoteId + \",\\n            #\" + base_1.default.bibliographyId + \"\\n        \");\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = Array.from(oldElements)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var old = _step3.value;\n\n                    if (old.parentElement) {\n                        old.parentElement.removeChild(old);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n                for (var _iterator4 = clusters[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                    var _ref = _step4.value;\n\n                    var _ref2 = _slicedToArray(_ref, 3);\n\n                    var index = _ref2[0];\n                    var content = _ref2[1];\n                    var id = _ref2[2];\n\n                    var citation = doc.getElementById(id);\n                    var innerHTML = kind === 'note' ? \"[\" + (index + 1) + \"]\" : content;\n                    var reflist = JSON.stringify(citationByIndex[index].citationItems.map(function (c) {\n                        return c.id;\n                    }));\n                    if (citation) {\n                        citation.innerHTML = innerHTML;\n                        citation.dataset.reflist = reflist;\n                        citation.dataset.footnote = kind === 'note' ? content : undefined;\n                    } else {\n                        this.editor.insertContent(base_1.default.createInlineElement({\n                            classNames: ['noselect', 'mceNonEditable'],\n                            footnote: kind === 'note' ? content : undefined,\n                            id: id,\n                            innerHTML: innerHTML,\n                            kind: kind,\n                            reflist: reflist\n                        }).outerHTML);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                        _iterator4.return();\n                    }\n                } finally {\n                    if (_didIteratorError4) {\n                        throw _iteratorError4;\n                    }\n                }\n            }\n\n            return kind === 'note' ? this.composeFootnotes() : void 0;\n        }\n    }, {\n        key: \"init\",\n        value: function init() {\n            return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                var _this2 = this;\n\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                                    var attempts = 0;\n                                    var interval = setInterval(function () {\n                                        if (top.tinyMCE === undefined) {\n                                            attempts += 1;\n                                            if (attempts === 10) {\n                                                clearInterval(interval);\n                                                return reject(new Error(\"TinyMCE editor doesn't appear to be available in this scope\"));\n                                            }\n                                        } else {\n                                            clearInterval(interval);\n                                            if (top.tinyMCE.editors && top.tinyMCE.editors.content && top.tinyMCE.editors.content.initialized) {\n                                                _this2.editor = top.tinyMCE.editors.content;\n                                                _this2.bindEvents();\n                                                return resolve();\n                                            }\n                                            interval = setInterval(function () {\n                                                if (top.tinyMCE.editors.content && top.tinyMCE.editors.content.initialized) {\n                                                    clearInterval(interval);\n                                                    _this2.editor = top.tinyMCE.editors.content;\n                                                    _this2.bindEvents();\n                                                    return resolve();\n                                                }\n                                            }, 200);\n                                        }\n                                    }, 500);\n                                }));\n\n                            case 1:\n                            case \"end\":\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n        }\n    }, {\n        key: \"removeItems\",\n        value: function removeItems(itemIds) {\n            var doc = this.editor.getDoc();\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n                for (var _iterator5 = itemIds[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                    var id = _step5.value;\n\n                    var item = doc.getElementById(id);\n                    if (item && item.parentElement) {\n                        item.parentElement.removeChild(item);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError5 = true;\n                _iteratorError5 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                        _iterator5.return();\n                    }\n                } finally {\n                    if (_didIteratorError5) {\n                        throw _iteratorError5;\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            var elements = this.editor.getDoc().querySelectorAll(\"#\" + base_1.default.bibliographyId + \", .\" + base_1.default.citationClass);\n            var _iteratorNormalCompletion6 = true;\n            var _didIteratorError6 = false;\n            var _iteratorError6 = undefined;\n\n            try {\n                for (var _iterator6 = Array.from(elements)[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                    var element = _step6.value;\n\n                    if (element.parentElement) {\n                        element.parentElement.removeChild(element);\n                    }\n                }\n                // Required to allow tinymce to consume changes\n            } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                        _iterator6.return();\n                    }\n                } finally {\n                    if (_didIteratorError6) {\n                        throw _iteratorError6;\n                    }\n                }\n            }\n\n            this.editor.insertContent('');\n        }\n    }, {\n        key: \"setBibliography\",\n        value: function setBibliography(options, bibliography) {\n            var staticBib = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            return staticBib ? this.setStaticBibliography(bibliography) : this.setStandardBibliography(options, bibliography);\n        }\n    }, {\n        key: \"setLoadingState\",\n        value: function setLoadingState(loading) {\n            this.editor.setProgressState(loading || false);\n        }\n    }, {\n        key: \"bindEvents\",\n        value: function bindEvents() {\n            var _this3 = this;\n\n            this.editor.on('focusin', function () {\n                _this3.selectionCache = Object.assign({}, _this3.selectionCache, { fresh: false });\n            });\n            this.editor.on('focusout', function () {\n                _this3.selectionCache = {\n                    fresh: true,\n                    selection: _this3.selection,\n                    bookmark: _this3.editor.selection.getBookmark(1)\n                };\n            });\n            this.editor.on('hide', function () {\n                dispatchEvent(new CustomEvent(base_1.default.events.UNAVAILABLE));\n            });\n            this.editor.on('show', function () {\n                dispatchEvent(new CustomEvent(base_1.default.events.AVAILABLE));\n            });\n            this.editor.on('Undo', function () {\n                dispatchEvent(new CustomEvent(base_1.default.events.UNDO));\n            });\n            this.editor.addShortcut('meta+alt+r', 'Add Reference', function () {\n                return dispatchEvent(new CustomEvent(base_1.default.events.ADD_REFERENCE));\n            });\n            this.editor.addShortcut('meta+alt+p', 'Pin Reference List', function () {\n                return dispatchEvent(new CustomEvent(base_1.default.events.TOGGLE_PINNED));\n            });\n            this.editorCitationObserver.observe(this.editor.getBody(), {\n                childList: true,\n                subtree: true\n            });\n        }\n    }, {\n        key: \"composeFootnotes\",\n        value: function composeFootnotes() {\n            var doc = this.editor.getDoc();\n            var orderedFootnotes = [].concat(_toConsumableArray(doc.querySelectorAll(\".\" + base_1.default.citationClass).entries())).reduce(function (prev, _ref3) {\n                var _ref4 = _slicedToArray(_ref3, 2),\n                    idx = _ref4[0],\n                    item = _ref4[1];\n\n                item.innerHTML = \"[\" + (idx + 1) + \"]\";\n                var footnote = item.getAttribute('data-footnote');\n                return footnote ? [].concat(_toConsumableArray(prev), [footnote]) : prev;\n            }, []);\n            if (orderedFootnotes.length === 0) {\n                return;\n            }\n            var bookmark = this.editor.selection.getBookmark();\n            var note = base_1.default.createFootnoteSection(orderedFootnotes, ['noselect', 'mceNonEditable']);\n            var body = this.editor.getBody();\n            this.editor.selection.setCursorLocation(body, body.childNodes.length);\n            this.editor.insertContent(note.outerHTML);\n            this.editor.selection.moveToBookmark(bookmark);\n        }\n    }, {\n        key: \"setStandardBibliography\",\n        value: function setStandardBibliography(options, bibliography) {\n            if (typeof bibliography === 'boolean' || bibliography.length === 0) return;\n            var bib = base_1.default.createBibliographyElement(options, bibliography, ['noselect', 'mceNonEditable']);\n            var bookmark = this.editor.selection.getBookmark();\n            var body = this.editor.getBody();\n            this.editor.selection.setCursorLocation(body, body.childNodes.length);\n            this.editor.insertContent(bib.outerHTML);\n            this.editor.selection.moveToBookmark(bookmark);\n        }\n    }, {\n        key: \"setStaticBibliography\",\n        value: function setStaticBibliography(bibliography) {\n            var items = typeof bibliography === 'boolean' ? [] : bibliography;\n            var staticBib = base_1.default.createBibliographyElement({}, items, [\"\" + base_1.default.staticBibClass, 'noselect', 'mceNonEditable']);\n            if (this.selectionCache.fresh) {\n                this.editor.selection.moveToBookmark(this.selectionCache.bookmark);\n            }\n            this.editor.insertContent(staticBib.outerHTML);\n        }\n    }, {\n        key: \"citationIds\",\n        get: function get() {\n            var citations = this.editor.getDoc().querySelectorAll(\"*:not(.mce-offscreen-selection) > .\" + base_1.default.citationClass);\n            return [].concat(_toConsumableArray(citations)).map(function (c) {\n                return c.id;\n            });\n        }\n    }, {\n        key: \"citationsByIndex\",\n        get: function get() {\n            var doc = this.editor.getDoc();\n            var nodes = [].concat(_toConsumableArray(doc.querySelectorAll(\"\\n                *:not(.mce-offscreen-selection) >\\n                    .\" + base_1.default.citationClass + \"\\n            \")));\n            var isFootnoteType = doc.querySelector(\"#\" + base_1.default.footnoteId) !== null;\n            return nodes.reduce(function (prev, citation, index) {\n                var reflist = citation.getAttribute('data-reflist');\n                if (!reflist) {\n                    return prev;\n                }\n                var refs = JSON.parse(reflist);\n                return [].concat(_toConsumableArray(prev), [{\n                    citationID: citation.id,\n                    citationItems: refs.map(function (ref) {\n                        return {\n                            id: ref\n                        };\n                    }),\n                    properties: {\n                        index: index,\n                        noteIndex: isFootnoteType ? 1 : 0\n                    }\n                }]);\n            }, []);\n        }\n    }, {\n        key: \"relativeCitationPositions\",\n        get: function get() {\n            var _this4 = this;\n\n            var doc = this.editor.getDoc();\n            var bm = this.selectionCache.fresh ? this.selectionCache.bookmark : this.editor.selection.getBookmark(1);\n            var startContainer = bm.rng.startContainer;\n\n            var citationNodes = [].concat(_toConsumableArray(doc.querySelectorAll(\"\\n                *:not(.mce-offscreen-selection) >\\n                    .\" + base_1.default.citationClass + \"\\n            \")));\n            return citationNodes.reduce(function (prev, citation, i) {\n                if (!citation.parentNode) {\n                    throw new Error('parentNode not defined for citation');\n                }\n                var position = startContainer.compareDocumentPosition(citation);\n                switch (position) {\n                    case Node.DOCUMENT_POSITION_PRECEDING:\n                        prev.itemsPreceding = [].concat(_toConsumableArray(prev.itemsPreceding), [[citation.id, i]]);\n                        break;\n                    case Node.DOCUMENT_POSITION_FOLLOWING:\n                        prev.itemsFollowing = [].concat(_toConsumableArray(prev.itemsFollowing), [[citation.id, i + 1]]);\n                        break;\n                    default:\n                        citation.parentElement.removeChild(citation);\n                        _this4.editor.selection.moveToBookmark(_this4.selectionCache.bookmark);\n                }\n                return prev;\n            }, {\n                itemsPreceding: [],\n                itemsFollowing: []\n            });\n        }\n    }, {\n        key: \"selection\",\n        get: function get() {\n            return this.selectionCache.fresh ? this.selectionCache.selection : this.editor.selection.getContent({ format: 'html' });\n        }\n    }]);\n\n    return TinyMCEDriver;\n}(base_1.default);\n\nexports.default = TinyMCEDriver;\n\n/***/ }),\n\n/***/ 648:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(400);\n\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// js/drivers/tinymce.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 648);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 07589190a9a0c7638448","import Editor from 'utils/editor';\n\nexport interface EditorDriverConstructor {\n    new (): EditorDriver;\n}\n\nexport interface RelativeCitationPositions {\n    itemsPreceding: Citeproc.Locator;\n    itemsFollowing: Citeproc.Locator;\n}\n\n/**\n * Base class from which all editor drivers must be derived\n */\nexport default abstract class EditorDriver extends Editor {\n    /** Retrieve an array of every HTMLElement ID for all citations currently existing in the editor. */\n    abstract get citationIds(): string[];\n\n    /**\n     * Retrieve a `Citeproc.CitationByIndex` object describing the order and\n     * contents of all citations existing in the document.\n     */\n    abstract get citationsByIndex(): Citeproc.CitationByIndex;\n\n    /**\n     * Returns a `Citeproc.RelativeCitationPositions` describing citations\n     * located before and after the current cursor location.\n     */\n    abstract get relativeCitationPositions(): RelativeCitationPositions;\n\n    /** Retrive the currently selected content in the editor as a raw HTML string. */\n    abstract get selection(): string;\n\n    /**\n     * If the editor has some form of alert or notifications system, override\n     * this so the native notifications are used.\n     * @param message Message to be alerted to the user.\n     */\n    alert(message: string): void {\n        window.alert(message);\n    }\n\n    /**\n     * Responsible for taking the data generated by the citation processor and\n     * composing the citations in the editor.\n     * @param clusters Array of `Citeproc.CitationCluster`\n     * @param citationByIndex Array of `Citeproc.Citation` ordered by position in document\n     * @param kind One of `note` or `in-text`\n     */\n    abstract composeCitations(\n        clusters: Citeproc.CitationResult[],\n        citationByIndex: Citeproc.CitationByIndex,\n        kind: Citeproc.CitationKind,\n    ): void;\n\n    /**\n     * Called when the window is loaded. Should resolve when the editor is\n     * available and ready.\n     */\n    abstract async init(): Promise<void>;\n\n    /**\n     * Responsible for finding and removing elements from the editor that have\n     * the given HTML Element IDs.\n     * @param idList Array of HTML element IDs to remove from the document\n     */\n    abstract removeItems(idList: string[]): void;\n\n    /**\n     * Find and remove all citations, footnotes, and bibliographies. Static\n     * bibliographies should be maintained.\n     */\n    abstract reset(): void;\n\n    /**\n     * Receives a bibliography array and options as input and composes and\n     * inserts a bibliography in the editor.\n     * @param options Object containing the user's bibliography options\n     * @param bibliography Either an array of ABT.Bibliograhy or `false` if the\n     * user's current citation style does not support bibliographies\n     * @param staticBib Is the bibliography a static biblography? (This should\n     * default to false)\n     */\n    abstract setBibliography(\n        options: ABT.BibOptions,\n        bibliography: ABT.Bibliography | boolean,\n        staticBib?: boolean,\n    ): void;\n\n    /**\n     * If the editor supports a 'loading' state which shows a spinner or some\n     * progress indicator, this should be implemented.\n     *   - If `true` is passed as an arg, the editor's state should be loading.\n     *   - If `false` is passed as an arg, the editor's state should be not loading.\n     *   - If no args are passed, the editor's loading state should be toggled to\n     *   the opposite of what it currently is.\n     * @param _loading Optional argument to explicitly set the loading state\n     */\n    setLoadingState(_loading?: boolean): void {\n        return;\n    }\n\n    /**\n     * Should be used for binding all `EditorEvents` to the appropriate\n     * handlers for the editor. Must be called internally (ideally should be\n     * done directly before promise resolution in the `init()` method).\n     * @emits Editor.EditorEvents\n     */\n    protected abstract bindEvents(): void;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/drivers/base.ts","// tslint:disable no-stateless-class\n\ninterface InlineElementOptions {\n    classNames?: string[];\n    footnote?: string;\n    id: string;\n    innerHTML: string;\n    kind: Citeproc.CitationKind;\n    reflist: string;\n}\n\nenum EditorEvents {\n    /**\n     * Bind and emit this if the editor supports keyboard shortcuts. Keyboard\n     * shortcut for this should be cmd/ctrl+alt+r\n     */\n    ADD_REFERENCE = 'ADD_REFERENCE',\n    /**\n     * Emit this any time the editor becomes available again after being\n     * unavailable (excluding the initial initialization).\n     */\n    AVAILABLE = 'EDITOR_AVAILABLE',\n    /**\n     * Emit this when user manually deletes one or more inline citations using\n     * the keyboard.\n     */\n    CITATION_DELETED = 'CITATION_DELETED',\n    /**\n     * Bind and emit to this if the editor supports keyboard shortcuts.\n     * Keyboard shortcut for this should be cmd/ctrl+alt+p\n     */\n    TOGGLE_PINNED = 'TOGGLE_PINNED',\n    /**\n     * Emit this any time the editor goes unavailable or becomes hidden.\n     */\n    UNAVAILABLE = 'EDITOR_UNAVAILABLE',\n    /**\n     * Emit this any time the user performs an \"undo\" in the editor.\n     */\n    UNDO = 'UNDO',\n}\n\nexport default abstract class Editor {\n    static readonly events = EditorEvents;\n\n    static readonly bibliographyId = 'abt-bibliography';\n    static readonly citationClass = 'abt-citation';\n    static readonly footnoteId = 'abt-footnote';\n    static readonly staticBibClass = 'abt-static-bib';\n\n    static createBibliographyElement(\n        { heading = '', headingLevel = 'h3', style = 'fixed' }: Partial<ABT.BibOptions>,\n        items: ABT.Bibliography,\n        classNames: string[] = [],\n    ): HTMLDivElement {\n        const bib = document.createElement('div');\n        bib.id = Editor.bibliographyId;\n        bib.setAttribute('data-reflist', JSON.stringify(items.map(({ id }) => id)));\n        bib.classList.add(Editor.bibliographyId, ...classNames);\n\n        if (bib.classList.contains(Editor.staticBibClass)) {\n            bib.classList.remove(Editor.bibliographyId);\n            bib.removeAttribute('id');\n            // Occurs only when attempting to insert a static list when the\n            // user's selected citation type doesn't define a bibliography.\n            if (items.length === 0) {\n                const { warnings } = top.ABT.i18n.errors;\n                bib.innerHTML = `<strong>${warnings.warning}:</strong> ${warnings.noBib}.`;\n                return bib;\n            }\n        }\n\n        if (heading) {\n            let headingElement;\n            if (style === 'toggle') {\n                headingElement = document.createElement('button');\n                headingElement.classList.add(\n                    `${Editor.bibliographyId}__heading`,\n                    `${Editor.bibliographyId}__heading_toggle`,\n                );\n                headingElement.setAttribute('aria-expanded', 'false');\n                headingElement.setAttribute('aria-controls', `${this.bibliographyId}__container`);\n                headingElement.setAttribute('data-heading-level', headingLevel);\n            } else {\n                headingElement = document.createElement(headingLevel);\n                headingElement.classList.add(`${Editor.bibliographyId}__heading`);\n            }\n            headingElement.textContent = heading;\n            bib.appendChild(headingElement);\n        }\n\n        const container = document.createElement('div');\n        container.id = `${this.bibliographyId}__container`;\n        container.classList.add(`${this.bibliographyId}__container`);\n        bib.appendChild(container);\n\n        for (const itemMeta of items) {\n            const item = document.createElement('div');\n            item.id = itemMeta.id;\n            item.innerHTML = itemMeta.html;\n            container.appendChild(item);\n        }\n\n        return bib;\n    }\n\n    static createFootnoteSection(footnotes: string[], classNames: string[] = []): HTMLDivElement {\n        const note = document.createElement('div');\n        note.id = Editor.footnoteId;\n        note.classList.add(Editor.footnoteId, ...classNames);\n\n        const heading = document.createElement('div');\n        heading.classList.add(`${Editor.footnoteId}__heading`);\n        heading.textContent = top.ABT.i18n.misc.footnotes;\n\n        note.appendChild(heading);\n\n        for (const [index, footnote] of Array.from(footnotes.entries())) {\n            const item = document.createElement('div');\n            item.classList.add(`${Editor.footnoteId}__item`);\n\n            const itemNumber = document.createElement('span');\n            itemNumber.classList.add(`${Editor.footnoteId}__number`);\n            itemNumber.textContent = `[${index + 1}]`;\n\n            const itemContent = document.createElement('span');\n            itemContent.classList.add(`${Editor.footnoteId}__content`);\n            itemContent.innerHTML = footnote;\n\n            item.appendChild(itemNumber);\n            item.appendChild(itemContent);\n\n            note.appendChild(item);\n        }\n\n        return note;\n    }\n\n    static createInlineElement({\n        classNames = [],\n        ...options,\n    }: InlineElementOptions): HTMLSpanElement {\n        const { id, innerHTML, reflist } = options;\n        const element = document.createElement('span');\n        element.id = id;\n        element.classList.add(Editor.citationClass, ...classNames);\n        element.innerHTML = innerHTML;\n        element.setAttribute('data-reflist', reflist);\n        if (options.kind === 'note') {\n            element.setAttribute('data-footnote', options.footnote!);\n        }\n        return element;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/editor.ts","import EditorDriver, { RelativeCitationPositions } from './base';\n\ninterface SelectionCache {\n    bookmark: {\n        rng: Range;\n    };\n    fresh: boolean;\n    selection: string;\n}\n\nexport default class TinyMCEDriver extends EditorDriver {\n    /**\n     * The TinyMCE editor instance\n     */\n    private editor: TinyMCE.Editor;\n\n    /**\n     * `MutationObserver` which watches and reacts to removals of individual\n     * citation nodes.\n     */\n    private editorCitationObserver = new MutationObserver((mutations): void => {\n        for (const mutation of mutations) {\n            for (const removedNode of Array.from(mutation.removedNodes)) {\n                if (removedNode.nodeName !== 'SPAN') {\n                    continue;\n                }\n                const classList = removedNode.attributes.getNamedItem('class');\n\n                if (!classList) {\n                    continue;\n                }\n\n                if (classList.value.split(' ').includes(EditorDriver.citationClass)) {\n                    dispatchEvent(new CustomEvent(EditorDriver.events.CITATION_DELETED));\n                }\n            }\n        }\n    });\n\n    /**\n     * Small helper that caches the most previous selection content and\n     * bookmark when the editor loses focus.\n     */\n    private selectionCache: SelectionCache = {\n        /**\n         * True if focus is currently outside of the editor. Otherwise a\n         * non-cached selection should be used\n         */\n        fresh: false,\n        /** Content currently selected (HTML) */\n        selection: '',\n        bookmark: { rng: document.createRange() },\n    };\n\n    get citationIds(): string[] {\n        const citations = this.editor\n            .getDoc()\n            .querySelectorAll(`*:not(.mce-offscreen-selection) > .${EditorDriver.citationClass}`);\n        return [...citations].map(c => c.id);\n    }\n\n    get citationsByIndex(): Citeproc.CitationByIndex {\n        const doc = this.editor.getDoc();\n        const nodes = [\n            ...doc.querySelectorAll(`\n                *:not(.mce-offscreen-selection) >\n                    .${EditorDriver.citationClass}\n            `),\n        ];\n        const isFootnoteType = doc.querySelector(`#${EditorDriver.footnoteId}`) !== null;\n\n        return nodes.reduce(\n            (prev, citation, index) => {\n                const reflist = citation.getAttribute('data-reflist');\n\n                if (!reflist) {\n                    return prev;\n                }\n\n                const refs: string[] = JSON.parse(reflist);\n\n                return [\n                    ...prev,\n                    {\n                        citationID: citation.id,\n                        citationItems: refs.map(ref => ({\n                            id: ref,\n                        })),\n                        properties: {\n                            index,\n                            noteIndex: isFootnoteType ? 1 : 0,\n                        },\n                    },\n                ];\n            },\n            <Citeproc.CitationByIndex>[],\n        );\n    }\n\n    get relativeCitationPositions(): RelativeCitationPositions {\n        const doc = this.editor.getDoc();\n        const bm = this.selectionCache.fresh\n            ? this.selectionCache.bookmark\n            : this.editor.selection.getBookmark(1);\n        const { rng: { startContainer } } = bm;\n        const citationNodes = [\n            ...doc.querySelectorAll(`\n                *:not(.mce-offscreen-selection) >\n                    .${EditorDriver.citationClass}\n            `),\n        ];\n\n        return citationNodes.reduce(\n            (prev, citation, i) => {\n                if (!citation.parentNode) {\n                    throw new Error('parentNode not defined for citation');\n                }\n\n                const position = startContainer.compareDocumentPosition(citation);\n\n                switch (position) {\n                    case Node.DOCUMENT_POSITION_PRECEDING:\n                        prev.itemsPreceding = [...prev.itemsPreceding, [citation.id, i]];\n                        break;\n                    case Node.DOCUMENT_POSITION_FOLLOWING:\n                        prev.itemsFollowing = [...prev.itemsFollowing, [citation.id, i + 1]];\n                        break;\n                    default:\n                        citation.parentElement!.removeChild(citation);\n                        this.editor.selection.moveToBookmark(this.selectionCache.bookmark);\n                }\n                return prev;\n            },\n            {\n                itemsPreceding: <Citeproc.Locator>[],\n                itemsFollowing: <Citeproc.Locator>[],\n            },\n        );\n    }\n\n    get selection(): string {\n        return this.selectionCache.fresh\n            ? this.selectionCache.selection\n            : this.editor.selection.getContent({ format: 'html' });\n    }\n\n    alert(message: string): void {\n        this.editor.windowManager.alert(message);\n    }\n\n    composeCitations(\n        clusters: Citeproc.CitationResult[],\n        citationByIndex: Citeproc.CitationByIndex,\n        kind: Citeproc.CitationKind,\n    ): void {\n        this.editor.focus();\n        const doc = this.editor.getDoc();\n        const oldElements = doc.querySelectorAll(`\n            #${EditorDriver.footnoteId},\n            #${EditorDriver.bibliographyId}\n        `);\n\n        for (const old of Array.from(oldElements)) {\n            if (old.parentElement) {\n                old.parentElement.removeChild(old);\n            }\n        }\n\n        for (const [index, content, id] of clusters) {\n            const citation = doc.getElementById(id);\n            const innerHTML = kind === 'note' ? `[${index + 1}]` : content;\n            const reflist = JSON.stringify(citationByIndex[index].citationItems.map(c => c.id));\n\n            if (citation) {\n                citation.innerHTML = innerHTML;\n                citation.dataset.reflist = reflist;\n                citation.dataset.footnote = kind === 'note' ? content : undefined;\n            } else {\n                this.editor.insertContent(\n                    EditorDriver.createInlineElement({\n                        classNames: ['noselect', 'mceNonEditable'],\n                        footnote: kind === 'note' ? content : undefined,\n                        id,\n                        innerHTML,\n                        kind,\n                        reflist,\n                    }).outerHTML,\n                );\n            }\n        }\n\n        return kind === 'note' ? this.composeFootnotes() : void 0;\n    }\n\n    async init(): Promise<void> {\n        return new Promise<void>((resolve, reject): void => {\n            let attempts = 0;\n            let interval = setInterval(() => {\n                if (top.tinyMCE === undefined) {\n                    attempts += 1;\n                    if (attempts === 10) {\n                        clearInterval(interval);\n                        return reject(\n                            new Error(\n                                `TinyMCE editor doesn't appear to be available in this scope`,\n                            ),\n                        );\n                    }\n                } else {\n                    clearInterval(interval);\n                    if (\n                        top.tinyMCE.editors &&\n                        top.tinyMCE.editors.content &&\n                        top.tinyMCE.editors.content.initialized\n                    ) {\n                        this.editor = top.tinyMCE.editors.content;\n                        this.bindEvents();\n                        return resolve();\n                    }\n                    interval = setInterval(() => {\n                        if (\n                            top.tinyMCE.editors.content &&\n                            top.tinyMCE.editors.content.initialized\n                        ) {\n                            clearInterval(interval);\n                            this.editor = top.tinyMCE.editors.content;\n                            this.bindEvents();\n                            return resolve();\n                        }\n                    }, 200);\n                }\n            }, 500);\n        });\n    }\n\n    removeItems(itemIds: string[]): void {\n        const doc = this.editor.getDoc();\n        for (const id of itemIds) {\n            const item = doc.getElementById(id);\n            if (item && item.parentElement) {\n                item.parentElement.removeChild(item);\n            }\n        }\n    }\n\n    reset(): void {\n        const elements = this.editor\n            .getDoc()\n            .querySelectorAll(`#${EditorDriver.bibliographyId}, .${EditorDriver.citationClass}`);\n        for (const element of Array.from(elements)) {\n            if (element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        // Required to allow tinymce to consume changes\n        this.editor.insertContent('');\n    }\n\n    setBibliography(\n        options: ABT.BibOptions,\n        bibliography: ABT.Bibliography | boolean,\n        staticBib: boolean = false,\n    ): void {\n        return staticBib\n            ? this.setStaticBibliography(bibliography)\n            : this.setStandardBibliography(options, bibliography);\n    }\n\n    setLoadingState(loading?: boolean): void {\n        this.editor.setProgressState(loading || false);\n    }\n\n    protected bindEvents(): void {\n        this.editor.on('focusin', () => {\n            this.selectionCache = { ...this.selectionCache, fresh: false };\n        });\n        this.editor.on('focusout', () => {\n            this.selectionCache = {\n                fresh: true,\n                selection: this.selection,\n                bookmark: this.editor.selection.getBookmark(1),\n            };\n        });\n        this.editor.on('hide', () => {\n            dispatchEvent(new CustomEvent(EditorDriver.events.UNAVAILABLE));\n        });\n        this.editor.on('show', () => {\n            dispatchEvent(new CustomEvent(EditorDriver.events.AVAILABLE));\n        });\n        this.editor.on('Undo', () => {\n            dispatchEvent(new CustomEvent(EditorDriver.events.UNDO));\n        });\n        this.editor.addShortcut('meta+alt+r', 'Add Reference', () =>\n            dispatchEvent(new CustomEvent(EditorDriver.events.ADD_REFERENCE)),\n        );\n        this.editor.addShortcut('meta+alt+p', 'Pin Reference List', () =>\n            dispatchEvent(new CustomEvent(EditorDriver.events.TOGGLE_PINNED)),\n        );\n        this.editorCitationObserver.observe(this.editor.getBody(), {\n            childList: true,\n            subtree: true,\n        });\n    }\n\n    private composeFootnotes(): void {\n        const doc = this.editor.getDoc();\n        const orderedFootnotes = [\n            ...doc.querySelectorAll(`.${EditorDriver.citationClass}`).entries(),\n        ].reduce((prev, [idx, item]) => {\n            item.innerHTML = `[${idx + 1}]`;\n            const footnote = item.getAttribute('data-footnote');\n            return footnote ? [...prev, footnote] : prev;\n        }, []);\n\n        if (orderedFootnotes.length === 0) {\n            return;\n        }\n\n        const bookmark = this.editor.selection.getBookmark();\n\n        const note = EditorDriver.createFootnoteSection(orderedFootnotes, [\n            'noselect',\n            'mceNonEditable',\n        ]);\n\n        const body = this.editor.getBody();\n        this.editor.selection.setCursorLocation(body, body.childNodes.length);\n        this.editor.insertContent(note.outerHTML);\n        this.editor.selection.moveToBookmark(bookmark);\n    }\n\n    private setStandardBibliography(\n        options: ABT.BibOptions,\n        bibliography: ABT.Bibliography | boolean,\n    ): void {\n        if (typeof bibliography === 'boolean' || bibliography.length === 0) return;\n\n        const bib = EditorDriver.createBibliographyElement(options, bibliography, [\n            'noselect',\n            'mceNonEditable',\n        ]);\n        const bookmark = this.editor.selection.getBookmark();\n\n        const body = this.editor.getBody();\n        this.editor.selection.setCursorLocation(body, body.childNodes.length);\n        this.editor.insertContent(bib.outerHTML);\n        this.editor.selection.moveToBookmark(bookmark);\n    }\n\n    private setStaticBibliography(bibliography: ABT.Bibliography | boolean): void {\n        const items: ABT.Bibliography = typeof bibliography === 'boolean' ? [] : bibliography;\n        const staticBib = EditorDriver.createBibliographyElement({}, items, [\n            `${EditorDriver.staticBibClass}`,\n            'noselect',\n            'mceNonEditable',\n        ]);\n        if (this.selectionCache.fresh) {\n            this.editor.selection.moveToBookmark(this.selectionCache.bookmark);\n        }\n        this.editor.insertContent(staticBib.outerHTML);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/drivers/tinymce.ts"],"sourceRoot":""}